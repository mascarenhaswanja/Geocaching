{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mayankarya/Documents/Geocaching/Screens/SignInScreen.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { geostyles } from \"../config/Styles\";\nimport { db } from \"../utilities/FirebaseManager\";\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userEmail = _useState2[0],\n      setUserEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  var signInPressed = function signInPressed() {\n    setErrorMsg('');\n\n    if (!userEmail) {\n      alert('Email is required');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Password is required');\n      return;\n    }\n\n    var userSignin = {\n      email: userEmail,\n      password: userPassword\n    };\n    console.log(\"Login button pressed\");\n    db.collection(\"users\").get(userSignin).then(function () {\n      console.log(\"Document successfully found\");\n    }).catch(function (error) {\n      console.error('Error - no user-email found', error);\n      setErrorMsg(\"User doesnt exist - Go to Signup - \" + error);\n      alert(errorMsg);\n    });\n  };\n\n  var goToSignUp = function goToSignUp() {\n    navigation.navigate('SignUpScreen');\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: geostyles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Welcome to Geocaching\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: geostyles.input,\n    onChangeText: function onChangeText(userEmail) {\n      return setUserEmail(userEmail);\n    },\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: geostyles.input,\n    onChangeText: function onChangeText(userPassword) {\n      return setUserPassword(userPassword);\n    },\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    blurOnSubmit: false,\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"SignIn\",\n    onPress: signInPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"SignUp\",\n    onPress: goToSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/mayankarya/Documents/Geocaching/Screens/SignInScreen.js"],"names":["React","useState","geostyles","db","SignInScreen","navigation","route","userEmail","setUserEmail","userPassword","setUserPassword","errorMsg","setErrorMsg","signInPressed","alert","userSignin","email","password","console","log","collection","get","then","catch","error","goToSignUp","navigate","title","input"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Button, SafeAreaView, Text, View, TextInput} from \"react-native\";\nimport { geostyles } from '../config/Styles';\nimport { db } from \"../utilities/FirebaseManager\"\n\nfunction SignInScreen({navigation,route}) {\n  const [userEmail, setUserEmail] = useState('')\n  const [userPassword, setUserPassword] = useState('')\n  const [errorMsg, setErrorMsg] = useState('')\n\n  const signInPressed = () => {\n    setErrorMsg('')\n    if (!userEmail) {\n      alert('Email is required')\n      return;\n    }\n    if (!userPassword) {\n      alert('Password is required')\n      return;\n    }\n\n    let userSignin = {email: userEmail, password: userPassword};\n     \n    console.log(\"Login button pressed\") \n    // db.collection(\"users\").get(userSignin).then((querySnapshot) => {\n    //   querySnapshot.forEach((documentFromFirestore) => {\n    //     console.log(`${documentFromFirestore.id}, ${JSON.stringify(documentFromFirestore.data())}`)\n    //   });\n    // });\n\n \n    db.collection(\"users\").get(userSignin)\n      .then(() => {\n          console.log(\"Document successfully found\")\n          //if email-password exists go to dashboard\n      }).catch((error) => {\n          // The document probably doesn't exist.\n          console.error('Error - no user-email found', error)\n          setErrorMsg(`User doesnt exist - Go to Signup - ${error}`)\n          alert(errorMsg)\n      })\n    }\n\n    const goToSignUp = () => {\n        navigation.navigate('SignUpScreen')\n    }\n  \n  return (\n    <SafeAreaView>\n        <Text style={geostyles.title}>Welcome to Geocaching</Text>\n        <View>\n            <TextInput\n                style={geostyles.input}\n                onChangeText={(userEmail) =>\n                  setUserEmail(userEmail)\n                }\n                placeholder=\"Enter Email\"  \n                placeholderTextColor=\"#8b9cb5\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                returnKeyType=\"next\"\n            />\n\n            <TextInput\n                style={geostyles.input}\n                onChangeText={(userPassword) =>\n                  setUserPassword(userPassword)\n                }\n                placeholder=\"Enter Password\"  \n                placeholderTextColor=\"#8b9cb5\"\n                blurOnSubmit={false}\n                secureTextEntry={true}\n                returnKeyType=\"next\"\n              />\n \n            <Button title=\"SignIn\" onPress={signInPressed}/>\n            <Button title=\"SignUp\" onPress={goToSignUp}/>\n        </View>\n    </SafeAreaView>\n  )\n}\n\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}