{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/FavouriteScreen.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nfunction FavouriteScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonEnabled = _useState6[0],\n      setButtonEnabled = _useState6[1];\n\n  var caches = [];\n\n  var getAllCaches = function getAllCaches() {\n    console.log(\"Fav - Get All Caches\");\n    db.collection(\"favorites\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (documentFromFirestore) {\n        console.log(documentFromFirestore.id + \", \" + JSON.stringify(documentFromFirestore.data()));\n        var fav = {\n          id: documentFromFirestore.data().id,\n          title: documentFromFirestore.data().title\n        };\n        console.log(\"Fav Firestore \", fav);\n        caches.push(fav);\n      });\n\n      if (caches.length === 0) {\n        alert(\"No Locations found\");\n        setButtonEnabled(false);\n      }\n\n      setData(caches);\n    });\n    setIsLoading(false);\n    console.log(\"Videos \", videos);\n  };\n\n  useEffect(function () {\n    getAllFavorites();\n  }, []);\n\n  var saveFavorite = function saveFavorite() {\n    var video = {\n      id: data.id,\n      title: data.title\n    };\n    db.collection(\"favorites\").add(video).then(function (doc) {\n      console.log(\"Document saved: \" + doc.id);\n    }).catch(function (err) {\n      console.log(\"Error saving video \" + err);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Favourite Screen\"), React.createElement(Button, {\n    title: \"FAVOURITE\",\n    disabled: !buttonEnabled,\n    onPress: saveFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default FavouriteScreen;","map":{"version":3,"sources":["/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/FavouriteScreen.js"],"names":["React","FavouriteScreen","props","useState","data","setData","isLoading","setIsLoading","buttonEnabled","setButtonEnabled","caches","getAllCaches","console","log","db","collection","get","then","querySnapshot","forEach","documentFromFirestore","id","JSON","stringify","fav","title","push","length","alert","videos","useEffect","getAllFavorites","saveFavorite","video","add","doc","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,kBAAwBC,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCF,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0CJ,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOK,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAC,IAAAA,EAAE,CAACC,UAAH,CAAc,WAAd,EAA2BC,GAA3B,GAAiCC,IAAjC,CAAsC,UAACC,aAAD,EAAmB;AACvDA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,qBAAD,EAA2B;AAC/CR,QAAAA,OAAO,CAACC,GAAR,CAAeO,qBAAqB,CAACC,EAArC,UAA4CC,IAAI,CAACC,SAAL,CAAeH,qBAAqB,CAAChB,IAAtB,EAAf,CAA5C;AACA,YAAMoB,GAAG,GAAG;AACRH,UAAAA,EAAE,EAAGD,qBAAqB,CAAChB,IAAtB,GAA6BiB,EAD1B;AAERI,UAAAA,KAAK,EAAEL,qBAAqB,CAAChB,IAAtB,GAA6BqB;AAF5B,SAAZ;AAIAb,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BW,GAA7B;AACAd,QAAAA,MAAM,CAACgB,IAAP,CAAYF,GAAZ;AACD,OARD;;AASA,UAAId,MAAM,CAACiB,MAAP,KAAkB,CAAtB,EAAyB;AACrBC,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACAnB,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;;AACDJ,MAAAA,OAAO,CAACK,MAAD,CAAP;AACD,KAfD;AAgBAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBgB,MAAtB;AACF,GApBD;;AAsBAC,EAAAA,SAAS,CAAE,YAAM;AAACC,IAAAA,eAAe;AAAG,GAA3B,EAA6B,EAA7B,CAAT;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAMC,KAAK,GAAI;AACXZ,MAAAA,EAAE,EAAEjB,IAAI,CAACiB,EADE;AAEXI,MAAAA,KAAK,EAAErB,IAAI,CAACqB;AAFD,KAAf;AAGAX,IAAAA,EAAE,CAACC,UAAH,CAAc,WAAd,EAA2BmB,GAA3B,CAA+BD,KAA/B,EACKhB,IADL,CAEQ,UAACkB,GAAD,EAAO;AACHvB,MAAAA,OAAO,CAACC,GAAR,sBAA+BsB,GAAG,CAACd,EAAnC;AACH,KAJT,EAKMe,KALN,CAMQ,UAACC,GAAD,EAAQ;AACJzB,MAAAA,OAAO,CAACC,GAAR,yBAAkCwB,GAAlC;AACH,KART;AAUF,GAdF;;AAeA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAE,CAAC7B,aAArC;AAAoD,IAAA,OAAO,EAAEwB,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAe/B,eAAf","sourcesContent":["import React from \"react\"\nimport {View, Text} from \"react-native\";\n\n \nfunction FavouriteScreen(props) {\n    const [data, setData] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [buttonEnabled, setButtonEnabled] = useState(true)\n    let caches = []\n\n    const getAllCaches = () => {\n        console.log(\"Fav - Get All Caches\") \n        db.collection(\"favorites\").get().then((querySnapshot) => {\n          querySnapshot.forEach((documentFromFirestore) => {\n            console.log(`${documentFromFirestore.id}, ${JSON.stringify(documentFromFirestore.data())}`)\n            const fav = {\n                id:  documentFromFirestore.data().id,\n                title: documentFromFirestore.data().title\n            }\n            console.log(\"Fav Firestore \",fav)\n            caches.push(fav)\n          });\n          if (caches.length === 0) {\n              alert(\"No Locations found\")\n              setButtonEnabled(false)\n          }\n          setData(caches)\n        });\n        setIsLoading(false)\n       console.log(\"Videos \",videos)\n    }\n\n    useEffect( () => {getAllFavorites()}, [])\n    const saveFavorite = () => {\n        const video =  {\n            id: data.id,\n            title: data.title}\n        db.collection(\"favorites\").add(video)\n            .then(\n                (doc)=>{\n                    console.log(`Document saved: ${doc.id}`)\n                }\n            ).catch(\n                (err)=> {\n                    console.log(`Error saving video ${err}`)\n                }\n            )\n     }\n    return (\n        <View>\n            <Text>Favourite Screen</Text>\n            <Button title=\"FAVOURITE\" disabled={!buttonEnabled} onPress={saveFavorite}/>\n        </View>\n    );\n}\n\nexport default FavouriteScreen;"]},"metadata":{},"sourceType":"module"}