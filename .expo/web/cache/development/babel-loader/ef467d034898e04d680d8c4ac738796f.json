{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mayankarya/Documents/Geocaching/Screens/GeoCachingListComponent.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { db } from \"../utilities/FirebaseManager\";\nimport { useEffect } from \"react\";\nimport MapComponent from \"./CachingLocationMapComponent\";\n\nvar GeoCachingList = function GeoCachingList(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      locPinData = _useState2[0],\n      setLocPinData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mapLng = _useState6[0],\n      setMapLng = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mapLat = _useState8[0],\n      setMapLat = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mapDesc = _useState10[0],\n      setMapDesc = _useState10[1];\n\n  var tempLocArray = [];\n\n  var getGeoCachingLocationFromFirebase = function getGeoCachingLocationFromFirebase() {\n    db.collection(\"cachLocations\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (documentFromFirestore) {\n        tempLocArray.push({\n          lat: documentFromFirestore.get(\"lat\"),\n          lng: documentFromFirestore.get(\"lng\"),\n          desc: documentFromFirestore.get(\"desc\"),\n          hint: documentFromFirestore.get(\"hint\"),\n          key: documentFromFirestore.id\n        });\n        setLocPinData(tempLocArray);\n      });\n    });\n    setLoading(false);\n  };\n\n  useEffect(function () {\n    getGeoCachingLocationFromFirebase();\n  }, []);\n\n  var addCachingLocToFav = function addCachingLocToFav(id) {\n    console.log(\"item \" + id);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    animating: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }) : React.createElement(FlatList, {\n    data: locPinData,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.key;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Pressable, {\n        onPress: function onPress() {\n          setMapLat(item.lat);\n          setMapLng(item.lng);\n          setMapDesc(item.desc);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 45\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        id: item.key,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \" \", item.desc, \" \"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, item.hint), React.createElement(Button, {\n        title: \"Add To Fav\",\n        onPress: addCachingLocToFav(item.id),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }), React.createElement(MapComponent, {\n    lat: mapLat,\n    lng: mapLng,\n    desc: mapDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default GeoCachingList;","map":{"version":3,"sources":["/Users/mayankarya/Documents/Geocaching/Screens/GeoCachingListComponent.js"],"names":["React","useState","db","useEffect","MapComponent","GeoCachingList","navigation","route","locPinData","setLocPinData","isLoading","setLoading","mapLng","setMapLng","mapLat","setMapLat","mapDesc","setMapDesc","tempLocArray","getGeoCachingLocationFromFirebase","collection","get","then","querySnapshot","forEach","documentFromFirestore","push","lat","lng","desc","hint","key","id","addCachingLocToFav","console","log","item","index"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { View, Text, StyleSheet, Button, FlatList,ActivityIndicator, Pressable } from \"react-native\";\nimport { db } from \"../utilities/FirebaseManager\";\nimport { useEffect } from \"react\";\nimport MapComponent from \"./CachingLocationMapComponent\";\n\n\n\nconst GeoCachingList = ({navigation,route}) => {\n    const [locPinData,setLocPinData] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [mapLng,setMapLng] = useState('');\n    const [mapLat,setMapLat] = useState('');\n    const [mapDesc,setMapDesc] = useState('');\n\n    \n\n    let tempLocArray = [];\n\n\n\n    const getGeoCachingLocationFromFirebase = () => {\n        db.collection(\"cachLocations\").get().then((querySnapshot) => {\n            querySnapshot.forEach((documentFromFirestore) => {\n            // tempArray.push({title : documentFromFirestore.get(\"title\"), id : documentFromFirestore.id});\n            // setListData(tempArrray);\n            tempLocArray.push({\n                lat : documentFromFirestore.get(\"lat\"),\n                 lng : documentFromFirestore.get(\"lng\"), \n                 desc : documentFromFirestore.get(\"desc\"), \n                 hint : documentFromFirestore.get(\"hint\"), \n                 key : documentFromFirestore.id })\n\n            setLocPinData(tempLocArray);\n            });\n          });\n\n          setLoading(false)\n    }\n\n    useEffect(()=>{getGeoCachingLocationFromFirebase()},[]);\n\n    const addCachingLocToFav = (id) => {\n        console.log(`item ${id}`);\n\n    }\n\n    return (\n    <View>\n    {isLoading ? (<ActivityIndicator animating={true} size=\"large\"/>) : (\n\n       <FlatList\n                data = {locPinData}\n                keyExtractor = { (item, index) => {return item.key;}}\n                renderItem = { ({item}) => (<Pressable onPress={ () => { setMapLat(item.lat); setMapLng(item.lng); setMapDesc(item.desc)}}>\n                    <View >\n                        <Text  id={item.key} > {item.desc} </Text>\n                        <Text>{item.hint}</Text>\n                        <Button title=\"Add To Fav\" onPress={addCachingLocToFav(item.id)}></Button>\n                    </View>\n                </Pressable>)}\n                /> \n    )}\n\n    <MapComponent lat={mapLat} lng={mapLng} desc={mapDesc}/>\n    </View>)\n}\n\nexport default GeoCachingList"]},"metadata":{},"sourceType":"module"}