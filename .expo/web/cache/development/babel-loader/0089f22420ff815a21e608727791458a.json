{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mayankarya/Documents/Geocaching/Screens/MapGeoCachingScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker, Animated } from 'react-native-maps';\nimport { db } from \"../utilities/FirebaseManager\";\n\nfunction MapGeoCachingScreen(props) {\n  var _useState = useState({\n    latitude: 45.5163539,\n    longitude: -73.5775142,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currRegion = _useState2[0],\n      setCurrentRegion = _useState2[1];\n\n  var getGeoCachingLocationFromFirebase = function getGeoCachingLocationFromFirebase() {\n    db.collection(\"cachLocations\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (documentFromFirestore) {\n        console.log(documentFromFirestore.doc);\n      });\n    });\n  };\n\n  useEffect(function () {\n    getGeoCachingLocationFromFirebase();\n  }, []);\n\n  var onMapMoved = function onMapMoved(data) {\n    console.log(data);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"MapScreen!\"), React.createElement(MapView, {\n    style: {\n      width: Dimensions.get('window').width,\n      height: 600,\n      margin: 0\n    },\n    initialRegion: currRegion,\n    onRegionChangeComplete: onMapMoved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: 45.51,\n      longitude: -73.5775\n    },\n    title: \"Pin\",\n    onPress: function onPress() {\n      console.log(\"Marker clicked\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }), React.createElement(Marker, {\n    coordinate: {\n      latitude: 45.41,\n      longitude: -73.5775\n    },\n    title: \"New Pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, \"Marker details\"), React.createElement(Button, {\n    title: \"Add To Fav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default MapGeoCachingScreen;","map":{"version":3,"sources":["/Users/mayankarya/Documents/Geocaching/Screens/MapGeoCachingScreen.js"],"names":["React","useState","useEffect","Location","MapView","Marker","Animated","db","MapGeoCachingScreen","props","latitude","longitude","latitudeDelta","longitudeDelta","currRegion","setCurrentRegion","getGeoCachingLocationFromFirebase","collection","get","then","querySnapshot","forEach","documentFromFirestore","console","log","doc","onMapMoved","data","flex","justifyContent","alignItems","width","Dimensions","height","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA2BC,QAA3B,QAA2C,mBAA3C;AACA,SAASC,EAAT;;AAKA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,kBAAsCR,QAAQ,CAAC;AAC3CS,IAAAA,QAAQ,EAAE,UADiC;AAE3CC,IAAAA,SAAS,EAAG,CAAC,UAF8B;AAG3CC,IAAAA,aAAa,EAAE,IAH4B;AAI3CC,IAAAA,cAAc,EAAE;AAJ2B,GAAD,CAA9C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAkBC,gBAAlB;;AAOA,MAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,GAAM;AAE5CT,IAAAA,EAAE,CAACU,UAAH,CAAc,eAAd,EAA+BC,GAA/B,GAAqCC,IAArC,CAA0C,UAACC,aAAD,EAAmB;AACzDA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,qBAAD,EAA2B;AAGjDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,qBAAqB,CAACG,GAAlC;AAEC,OALD;AAMD,KAPH;AAQH,GAVD;;AAYAvB,EAAAA,SAAS,CAAC,YAAK;AAACc,IAAAA,iCAAiC;AAAG,GAA3C,EAA4C,EAA5C,CAAT;;AAGC,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,GAFD;;AAKC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,OAAD;AACC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEC,UAAU,CAACd,GAAX,CAAe,QAAf,EAAyBa,KAAjC;AAAwCE,MAAAA,MAAM,EAAC,GAA/C;AAAoDC,MAAAA,MAAM,EAAG;AAA7D,KADR;AAEC,IAAA,aAAa,EAAEpB,UAFhB;AAGC,IAAA,sBAAsB,EAAEY,UAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE;AAAChB,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,SAAS,EAAE,CAAC;AAA9B,KAApB;AAA4D,IAAA,KAAK,EAAC,KAAlE;AAAwE,IAAA,OAAO,EAAE,mBAAK;AAACY,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAA8B,KAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,EAMC,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE;AAACd,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,SAAS,EAAE,CAAC;AAA9B,KAApB;AAA4D,IAAA,KAAK,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CAFF,EAWG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXH,CADF;AAmBL;;AAKD,eAAeH,mBAAf","sourcesContent":["import React, {useState,useEffect} from \"react\"\nimport {View, Text, Dimensions, Button} from \"react-native\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker , Animated } from 'react-native-maps';\nimport { db } from \"../utilities/FirebaseManager\"\n\n\n\n//define the exponent\nfunction MapGeoCachingScreen(props) {\n    const [currRegion,setCurrentRegion] = useState({\n        latitude: 45.5163539,\n        longitude:  -73.5775142,\n        latitudeDelta: 0.05,\n        longitudeDelta: 0.05,   \n      }\n     )\n    const getGeoCachingLocationFromFirebase = () => {\n\n        db.collection(\"cachLocations\").get().then((querySnapshot) => {\n            querySnapshot.forEach((documentFromFirestore) => {\n            // tempArray.push({title : documentFromFirestore.get(\"title\"), id : documentFromFirestore.id});\n            // setListData(tempArray);\n            console.log(documentFromFirestore.doc);\n\n            });\n          });\n    }\n\n    useEffect(()=> {getGeoCachingLocationFromFirebase()},[]);\n\n    \n     const onMapMoved = (data) => {\n       console.log(data)\n     }\n\n\n      return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <Text>MapScreen!</Text>\n          <MapView\n           style={{width: Dimensions.get('window').width, height:600, margin : 0}}\n           initialRegion={currRegion}\n           onRegionChangeComplete={onMapMoved}\n         >\n           <Marker coordinate={{latitude: 45.51, longitude: -73.5775}} title=\"Pin\" onPress={()=> {console.log(\"Marker clicked\")}}/>\n           <Marker coordinate={{latitude: 45.41, longitude: -73.5775}} title=\"New Pin\"/>\n    \n           </MapView> \n           <View>\n               <Text>Marker details</Text>\n               <Button title=\"Add To Fav\"></Button>\n            </View>     \n        </View>\n      );\n    \n}\n\n\n\n//export the component\nexport default MapGeoCachingScreen;"]},"metadata":{},"sourceType":"module"}