{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/SignInScreen.js\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { geostyles } from \"../utilities/Styles\";\nimport { db } from \"../utilities/FirebaseManager\";\n\nfunction SignInScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userEmail = _useState2[0],\n      setUserEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      setUserPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  var signInPressed = function signInPressed() {\n    var isValid = false;\n    navigation.navigate('HomeTabContainer');\n\n    if (!userEmail || !userPassword) {\n      setErrorMsg('Please enter a Email/Password');\n      alert(errorMsg);\n      return;\n    }\n\n    db.collection('users').get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (documentFromFirestore) {\n        if (userEmail === documentFromFirestore.data().email && userPassword === documentFromFirestore.data().password) {\n          console.log(\"Exists \" + JSON.stringify(documentFromFirestore.data()));\n          isValid = true;\n        }\n      });\n    }).then(function () {\n      if (isValid) {\n        console.log(\"Go to Home\");\n        navigation.navigate('HomeTabContainer');\n      } else {\n        setErrorMsg(\"User doesnt exist - Go to Signup\");\n        alert(errorMsg);\n        setUserEmail('');\n        setUserPassword('');\n      }\n    }).catch(function (error) {\n      console.error('Error getting document - no user-email found', error);\n      setErrorMsg(\"User doesnt exist - Go to Signup - \" + error);\n      alert(errorMsg);\n    });\n  };\n\n  var goToSignUp = function goToSignUp() {\n    navigation.navigate('SignUp');\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: geostyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: geostyles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Welcome to Geocaching\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: geostyles.input,\n    placeholder: \" Enter Email\",\n    placeholderTextColor: \"#243b16\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(userEmail) {\n      return setUserEmail(userEmail);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: geostyles.input,\n    placeholder: \" Enter Password \",\n    placeholderTextColor: \"#243b16\",\n    blurOnSubmit: false,\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(userPassword) {\n      return setUserPassword(userPassword);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"SignIn\",\n    onPress: signInPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Don't have account? SignUp\",\n    onPress: goToSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/SignInScreen.js"],"names":["React","useState","geostyles","db","SignInScreen","navigation","route","userEmail","setUserEmail","userPassword","setUserPassword","errorMsg","setErrorMsg","signInPressed","isValid","navigate","alert","collection","get","then","querySnapshot","forEach","documentFromFirestore","data","email","password","console","log","JSON","stringify","catch","error","goToSignUp","container","title","input"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport { Button, SafeAreaView, Text, View, TextInput} from \"react-native\"\nimport { geostyles } from '../utilities/Styles'\nimport { db } from '../utilities/FirebaseManager'\n\nfunction SignInScreen({navigation,route}) {\n  const [userEmail, setUserEmail] = useState('')\n  const [userPassword, setUserPassword] = useState('')\n  const [errorMsg, setErrorMsg] = useState('')\n\n  const signInPressed = () => {\n    let isValid = false\n    navigation.navigate('HomeTabContainer')\n  \n    // INPUT VALIDATION\n    if (!userEmail || !userPassword) {\n      setErrorMsg('Please enter a Email/Password')\n      alert(errorMsg)\n      return;\n    }\n\n    db.collection('users').get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((documentFromFirestore) => {\n         //console.log(`${documentFromFirestore.id}, ${JSON.stringify(documentFromFirestore.data())}`)\n          if (userEmail === documentFromFirestore.data().email &&\n              userPassword === documentFromFirestore.data().password) {\n                console.log(`Exists ${JSON.stringify(documentFromFirestore.data())}`)\n                isValid = true\n          }\n        })\n      })\n      .then(() => {\n        if (isValid) {\n          console.log(`Go to Home`)\n          navigation.navigate('HomeTabContainer')\n        } else {\n          setErrorMsg(`User doesnt exist - Go to Signup`)\n          alert(errorMsg)\n          setUserEmail('')\n          setUserPassword('')\n        }\n      })\n      .catch((error) => {\n         console.error('Error getting document - no user-email found', error)\n         setErrorMsg(`User doesnt exist - Go to Signup - ${error}`)\n         alert(errorMsg)\n     })\n    }\n\n    const goToSignUp = () => {\n        navigation.navigate('SignUp')\n    }\n  \n  return (\n    <SafeAreaView style={geostyles.container}>\n        <Text style={geostyles.title}>Welcome to Geocaching</Text>\n        <View >\n            <TextInput\n                style={geostyles.input}\n                placeholder=\" Enter Email\"  \n                placeholderTextColor=\"#243b16\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                returnKeyType=\"next\"\n                onChangeText={(userEmail) =>\n                  setUserEmail(userEmail)\n                }\n            />\n\n            <TextInput\n                style={geostyles.input}\n                placeholder=\" Enter Password \"  \n                placeholderTextColor=\"#243b16\"\n                blurOnSubmit={false}\n                secureTextEntry={true}\n                returnKeyType=\"next\"\n                onChangeText={(userPassword) =>\n                  setUserPassword(userPassword)\n                }\n              />\n            <Button title=\"SignIn\" onPress={signInPressed}/>\n            <Button title=\"Don't have account? SignUp\" onPress={goToSignUp}/>\n        </View>\n    </SafeAreaView>\n  )\n}\n\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}