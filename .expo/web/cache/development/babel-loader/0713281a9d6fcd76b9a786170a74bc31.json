{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/CachingLocationMapComponent.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from 'react-native-maps';\n\nvar MapComponent = function MapComponent(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      pins = _useState2[0],\n      setPins = _useState2[1];\n\n  console.log(\"Props markers => \", props.markers);\n\n  var pinsMarker = function pinsMarker() {\n    setPins(props.markers);\n    console.log(\"Pins => \", pins);\n  };\n\n  var onMarkerPress = function onMarkerPress(location) {\n    console.log(\"Press pin \", location);\n  };\n\n  useEffect(function () {\n    pinsMarker();\n  }, []);\n\n  var _useState3 = useState({\n    latitude: 43.6163539,\n    longitude: -79.3793008,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currRegion = _useState4[0],\n      setCurrentRegion = _useState4[1];\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: {\n      width: Dimensions.get('window').width,\n      height: 300\n    },\n    initialRegion: currRegion,\n    showCurrentLocation: \"true\",\n    showsCompass: true,\n    maxZoomLevel: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, pins.map(function (location, index) {\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: {\n        latitude: location.lat,\n        longitude: location.lng\n      },\n      title: location.desc,\n      onPress: onMarkerPress(location),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    });\n  })));\n};\n\nexport default MapComponent;","map":{"version":3,"sources":["/Users/graphic/Documents/#mads4008_Advanced_Web/#project/Geocaching/Screens/CachingLocationMapComponent.js"],"names":["React","useState","useEffect","Location","MapView","Marker","MapComponent","props","pins","setPins","console","log","markers","pinsMarker","onMarkerPress","location","latitude","longitude","latitudeDelta","longitudeDelta","currRegion","setCurrentRegion","width","Dimensions","get","height","map","index","lat","lng","desc"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,KAAK,CAACK,OAAvC;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBJ,IAAAA,OAAO,CAACF,KAAK,CAACK,OAAP,CAAP;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,IAAxB;AACD,GAHD;;AAKA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAClCL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBI,QAAzB;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,YAAI;AAACW,IAAAA,UAAU;AAAG,GAAnB,EAAoB,EAApB,CAAT;;AAEA,mBAAsCZ,QAAQ,CAAC;AAC3Ce,IAAAA,QAAQ,EAAE,UADiC;AAE3CC,IAAAA,SAAS,EAAG,CAAC,UAF8B;AAG3CC,IAAAA,aAAa,EAAE,IAH4B;AAI3CC,IAAAA,cAAc,EAAE;AAJ2B,GAAD,CAA9C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAkBC,gBAAlB;;AASA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,oBAAC,OAAD;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAjC;AAAwCG,MAAAA,MAAM,EAAC;AAA/C,KADP;AAEA,IAAA,aAAa,EAAEL,UAFf;AAGA,IAAA,mBAAmB,EAAC,MAHpB;AAIA,IAAA,YAAY,EAAE,IAJd;AAKA,IAAA,YAAY,EAAE,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASEZ,IAAI,CAACkB,GAAL,CAAS,UAACX,QAAD,EAAWY,KAAX,EAAqB;AAC3B,WACQ,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,UAAU,EAAE;AAACX,QAAAA,QAAQ,EAAED,QAAQ,CAACa,GAApB;AAAyBX,QAAAA,SAAS,EAAEF,QAAQ,CAACc;AAA7C,OAFhB;AAGI,MAAA,KAAK,EAAEd,QAAQ,CAACe,IAHpB;AAKI,MAAA,OAAO,EAAEhB,aAAa,CAACC,QAAD,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AASC,GAVJ,CATF,CAHH,CADJ;AA8BH,CAtDD;;AAwDA,eAAeT,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { View, Dimensions, ActivityIndicator } from \"react-native\";\nimport * as Location from \"expo-location\";\nimport MapView, { Marker } from 'react-native-maps';\n\n\n\nconst MapComponent = (props) => {\n    const [pins, setPins] = useState([])\n    console.log(\"Props markers => \", props.markers)\n    \n    const pinsMarker = () => {\n      setPins(props.markers)\n      console.log(\"Pins => \", pins)\n    }\n    \n    const onMarkerPress = (location) => {\n      console.log(\"Press pin \",location)\n    }\n   \n    useEffect(()=>{pinsMarker()},[])\n\n    const [currRegion,setCurrentRegion] = useState({\n        latitude: 43.6163539,\n        longitude:  -79.3793008,\n        latitudeDelta: 0.05,\n        longitudeDelta: 0.05,   \n      }\n     )\n\n\n    return (\n        <View>\n          \n           {/* {pins && <MapView */}\n           <MapView\n           style={{width: Dimensions.get('window').width, height:300}}\n           initialRegion={currRegion}\n           showCurrentLocation='true'\n           showsCompass={true}\n           maxZoomLevel={8}>\n           {/* <Marker coordinate={{latitude: props.lat, longitude: props.lng}} title={props.desc} onPress={()=> {console.log(\"Marker clicked\")}}/> */}\n            {/* <Marker coordinate={{latitude: Number(props.lat), longitude: Number(props.lng)}} title={props.desc} onPress={()=> {console.log(\"Marker clicked\")}}/> */}\n            {/* {pins && pins.map((location, index) => { */}\n            {pins.map((location, index) => {\n                return (\n                        <Marker\n                            key={index}\n                            coordinate={{latitude: location.lat, longitude: location.lng}}\n                            title={location.desc}\n                            // description={\"address\"}\n                            onPress={onMarkerPress(location)}\n                        />\n                    )\n                })\n              }\n \n           </MapView>\n        {/* } */}\n        </View>\n    )\n}\n\nexport default MapComponent;\n"]},"metadata":{},"sourceType":"module"}